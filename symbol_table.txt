Total symbols: 715
using                    IDENTIFIER              
System                   IDENTIFIER              
;                        END_STATEMENT           
using                    IDENTIFIER              
UnityEngine              IDENTIFIER              
;                        END_STATEMENT           
namespace                IDENTIFIER              
UZSG                     IDENTIFIER              
{                        BRACE_START             
//                       COMMENT_DELIM           
//                       COMMENT_DELIM           
//                       COMMENT_DELIM           
//                       COMMENT_DELIM           
[                        BRACKET_START           
Serializable             IDENTIFIER              
]                        BRACKET_END             
public                   KEYWORD                 
class                    KEYWORD                 
VitalAttribute           IDENTIFIER              
:                        COLON                   
Attribute                IDENTIFIER              
{                        BRACE_START             
//                       COMMENT_DELIM           
//                       COMMENT_DELIM           
//                       COMMENT_DELIM           
public                   KEYWORD                 
enum                     KEYWORD                 
Cycle                    IDENTIFIER              
{                        BRACE_START             
Regen                    IDENTIFIER              
,                        COMMA                   
Degen                    IDENTIFIER              
,                        COMMA                   
Static                   IDENTIFIER              
}                        BRACE_END               
protected                KEYWORD                 
Cycle                    IDENTIFIER              
_type                    IDENTIFIER              
;                        END_STATEMENT           
protected                KEYWORD                 
bool                     KEYWORD                 
_allowChange             IDENTIFIER              
=                        EQUALITY_OP             
true                     KEYWORD                 
;                        END_STATEMENT           
protected                KEYWORD                 
bool                     KEYWORD                 
_allowRegen              IDENTIFIER              
=                        EQUALITY_OP             
true                     KEYWORD                 
;                        END_STATEMENT           
protected                KEYWORD                 
bool                     KEYWORD                 
_allowDegen              IDENTIFIER              
=                        EQUALITY_OP             
true                     KEYWORD                 
;                        END_STATEMENT           
protected                KEYWORD                 
bool                     KEYWORD                 
_isEnabled               IDENTIFIER              
=                        EQUALITY_OP             
true                     KEYWORD                 
;                        END_STATEMENT           
protected                KEYWORD                 
bool                     KEYWORD                 
_limitOverflow           IDENTIFIER              
=                        EQUALITY_OP             
true                     KEYWORD                 
;                        END_STATEMENT           
protected                KEYWORD                 
bool                     KEYWORD                 
_limitUnderflow          IDENTIFIER              
=                        EQUALITY_OP             
true                     KEYWORD                 
;                        END_STATEMENT           
protected                KEYWORD                 
float                    KEYWORD                 
_minimum                 IDENTIFIER              
=                        EQUALITY_OP             
0                        NUM_LITERAL             
f                        NUM_SUFFIX              
;                        END_STATEMENT           
//                       COMMENT_DELIM           
//                       COMMENT_DELIM           
//                       COMMENT_DELIM           
[                        BRACKET_START           
SerializeField           IDENTIFIER              
]                        BRACKET_END             
protected                KEYWORD                 
float                    KEYWORD                 
_baseMaximum             IDENTIFIER              
;                        END_STATEMENT           
public                   KEYWORD                 
float                    KEYWORD                 
BaseMaximum              IDENTIFIER              
{                        BRACE_START             
get                      KEYWORD                 
;                        END_STATEMENT           
}                        BRACE_END               
[                        BRACKET_START           
SerializeField           IDENTIFIER              
]                        BRACKET_END             
protected                KEYWORD                 
float                    KEYWORD                 
_currentMaximum          IDENTIFIER              
;                        END_STATEMENT           
//                       COMMENT_DELIM           
//                       COMMENT_DELIM           
//                       COMMENT_DELIM           
public                   KEYWORD                 
float                    KEYWORD                 
Max                      IDENTIFIER              
{                        BRACE_START             
get                      KEYWORD                 
=>                       RETURN                  
_currentMaximum          IDENTIFIER              
;                        END_STATEMENT           
}                        BRACE_END               
[                        BRACKET_START           
SerializeField           IDENTIFIER              
]                        BRACKET_END             
protected                KEYWORD                 
float                    KEYWORD                 
_multiplier              IDENTIFIER              
;                        END_STATEMENT           
//                       COMMENT_DELIM           
//                       COMMENT_DELIM           
//                       COMMENT_DELIM           
public                   KEYWORD                 
float                    KEYWORD                 
Multiplier               IDENTIFIER              
{                        BRACE_START             
get                      KEYWORD                 
=>                       RETURN                  
_multiplier              IDENTIFIER              
;                        END_STATEMENT           
}                        BRACE_END               
//                       COMMENT_DELIM           
//                       COMMENT_DELIM           
//                       COMMENT_DELIM           
[                        BRACKET_START           
SerializeField           IDENTIFIER              
]                        BRACKET_END             
protected                KEYWORD                 
float                    KEYWORD                 
_baseRegen               IDENTIFIER              
;                        END_STATEMENT           
[                        BRACKET_START           
SerializeField           IDENTIFIER              
]                        BRACKET_END             
protected                KEYWORD                 
float                    KEYWORD                 
_currentRegen            IDENTIFIER              
;                        END_STATEMENT           
//                       COMMENT_DELIM           
//                       COMMENT_DELIM           
//                       COMMENT_DELIM           
public                   KEYWORD                 
float                    KEYWORD                 
RegenValue               IDENTIFIER              
{                        BRACE_START             
get                      KEYWORD                 
=>                       RETURN                  
_currentRegen            IDENTIFIER              
;                        END_STATEMENT           
}                        BRACE_END               
//                       COMMENT_DELIM           
//                       COMMENT_DELIM           
//                       COMMENT_DELIM           
[                        BRACKET_START           
SerializeField           IDENTIFIER              
]                        BRACKET_END             
protected                KEYWORD                 
float                    KEYWORD                 
_baseDegen               IDENTIFIER              
;                        END_STATEMENT           
[                        BRACKET_START           
SerializeField           IDENTIFIER              
]                        BRACKET_END             
protected                KEYWORD                 
float                    KEYWORD                 
_currentDegen            IDENTIFIER              
;                        END_STATEMENT           
//                       COMMENT_DELIM           
//                       COMMENT_DELIM           
//                       COMMENT_DELIM           
public                   KEYWORD                 
float                    KEYWORD                 
DegenValue               IDENTIFIER              
{                        BRACE_START             
get                      KEYWORD                 
=>                       RETURN                  
_currentDegen            IDENTIFIER              
;                        END_STATEMENT           
}                        BRACE_END               
private                  KEYWORD                 
float                    KEYWORD                 
_regenMultiplier         IDENTIFIER              
;                        END_STATEMENT           
protected                KEYWORD                 
float                    KEYWORD                 
RegenMultiplier          IDENTIFIER              
{                        BRACE_START             
get                      KEYWORD                 
=>                       RETURN                  
_regenMultiplier         IDENTIFIER              
;                        END_STATEMENT           
}                        BRACE_END               
private                  KEYWORD                 
float                    KEYWORD                 
_degenMultiplier         IDENTIFIER              
;                        END_STATEMENT           
protected                KEYWORD                 
float                    KEYWORD                 
DegenMultiplier          IDENTIFIER              
{                        BRACE_START             
get                      KEYWORD                 
=>                       RETURN                  
_degenMultiplier         IDENTIFIER              
;                        END_STATEMENT           
}                        BRACE_END               
public                   KEYWORD                 
event                    KEYWORD                 
Action                   IDENTIFIER              
OnReachFull              IDENTIFIER              
;                        END_STATEMENT           
public                   KEYWORD                 
event                    KEYWORD                 
Action                   IDENTIFIER              
OnReachZero              IDENTIFIER              
;                        END_STATEMENT           
public                   KEYWORD                 
VitalAttribute           IDENTIFIER              
(                        PARENTHESIS_START       
float                    KEYWORD                 
baseMax                  IDENTIFIER              
,                        COMMA                   
float                    KEYWORD                 
value                    IDENTIFIER              
,                        COMMA                   
Cycle                    IDENTIFIER              
cycle                    IDENTIFIER              
)                        PARENTHESIS_END         
:                        COLON                   
base                     KEYWORD                 
(                        PARENTHESIS_START       
value                    IDENTIFIER              
)                        PARENTHESIS_END         
{                        BRACE_START             
_baseMaximum             IDENTIFIER              
=                        EQUALITY_OP             
baseMax                  IDENTIFIER              
;                        END_STATEMENT           
switch                   KEYWORD                 
(                        PARENTHESIS_START       
cycle                    IDENTIFIER              
)                        PARENTHESIS_END         
{                        BRACE_START             
case                     KEYWORD                 
Cycle                    IDENTIFIER              
.                        DOT                     
Regen                    IDENTIFIER              
:                        COLON                   
case                     KEYWORD                 
Cycle                    IDENTIFIER              
.                        DOT                     
Degen                    IDENTIFIER              
:                        COLON                   
Game                     IDENTIFIER              
.                        DOT                     
Tick                     IDENTIFIER              
.                        DOT                     
OnSecond                 IDENTIFIER              
+=                       ADD_ASSIGN              
Second                   IDENTIFIER              
;                        END_STATEMENT           
break                    KEYWORD                 
;                        END_STATEMENT           
}                        BRACE_END               
}                        BRACE_END               
void                     KEYWORD                 
Second                   IDENTIFIER              
(                        PARENTHESIS_START       
object                   IDENTIFIER              
sender                   IDENTIFIER              
,                        COMMA                   
Tick                     IDENTIFIER              
.                        DOT                     
TickEventArgs            IDENTIFIER              
e                        IDENTIFIER              
)                        PARENTHESIS_END         
{                        BRACE_START             
Degen                    IDENTIFIER              
(                        PARENTHESIS_START       
)                        PARENTHESIS_END         
;                        END_STATEMENT           
Regen                    IDENTIFIER              
(                        PARENTHESIS_START       
)                        PARENTHESIS_END         
;                        END_STATEMENT           
}                        BRACE_END               
//                       COMMENT_DELIM           
//                       COMMENT_DELIM           
//                       COMMENT_DELIM           
void                     KEYWORD                 
Regen                    IDENTIFIER              
(                        PARENTHESIS_START       
)                        PARENTHESIS_END         
{                        BRACE_START             
if                       KEYWORD                 
(                        PARENTHESIS_START       
!                        LOGICAL_NOT             
_allowRegen              IDENTIFIER              
)                        PARENTHESIS_END         
return                   KEYWORD                 
;                        END_STATEMENT           
_value                   IDENTIFIER              
+=                       ADD_ASSIGN              
RegenValue               IDENTIFIER              
;                        END_STATEMENT           
}                        BRACE_END               
//                       COMMENT_DELIM           
//                       COMMENT_DELIM           
//                       COMMENT_DELIM           
void                     KEYWORD                 
Degen                    IDENTIFIER              
(                        PARENTHESIS_START       
)                        PARENTHESIS_END         
{                        BRACE_START             
if                       KEYWORD                 
(                        PARENTHESIS_START       
!                        LOGICAL_NOT             
_allowDegen              IDENTIFIER              
)                        PARENTHESIS_END         
return                   KEYWORD                 
;                        END_STATEMENT           
_value                   IDENTIFIER              
-=                       MINUS_ASSIGN            
DegenValue               IDENTIFIER              
;                        END_STATEMENT           
}                        BRACE_END               
protected                KEYWORD                 
override                 KEYWORD                 
void                     KEYWORD                 
OnValueChange            IDENTIFIER              
(                        PARENTHESIS_START       
)                        PARENTHESIS_END         
{                        BRACE_START             
base                     KEYWORD                 
.                        DOT                     
OnValueChange            IDENTIFIER              
(                        PARENTHESIS_START       
)                        PARENTHESIS_END         
;                        END_STATEMENT           
if                       KEYWORD                 
(                        PARENTHESIS_START       
_value                   IDENTIFIER              
==                       LOGICAL_EQUALS          
_minimum                 IDENTIFIER              
)                        PARENTHESIS_END         
{                        BRACE_START             
OnReachZero              IDENTIFIER              
?                        QUESTION_MARK           
.                        DOT                     
Invoke                   IDENTIFIER              
(                        PARENTHESIS_START       
)                        PARENTHESIS_END         
;                        END_STATEMENT           
return                   KEYWORD                 
;                        END_STATEMENT           
}                        BRACE_END               
if                       KEYWORD                 
(                        PARENTHESIS_START       
_value                   IDENTIFIER              
==                       LOGICAL_EQUALS          
_currentMaximum          IDENTIFIER              
)                        PARENTHESIS_END         
{                        BRACE_START             
OnReachFull              IDENTIFIER              
?                        QUESTION_MARK           
.                        DOT                     
Invoke                   IDENTIFIER              
(                        PARENTHESIS_START       
)                        PARENTHESIS_END         
;                        END_STATEMENT           
return                   KEYWORD                 
;                        END_STATEMENT           
}                        BRACE_END               
}                        BRACE_END               
public                   KEYWORD                 
override                 KEYWORD                 
void                     KEYWORD                 
Add                      IDENTIFIER              
(                        PARENTHESIS_START       
float                    KEYWORD                 
value                    IDENTIFIER              
)                        PARENTHESIS_END         
{                        BRACE_START             
base                     KEYWORD                 
.                        DOT                     
Add                      IDENTIFIER              
(                        PARENTHESIS_START       
value                    IDENTIFIER              
)                        PARENTHESIS_END         
;                        END_STATEMENT           
CheckOverflow            IDENTIFIER              
(                        PARENTHESIS_START       
)                        PARENTHESIS_END         
;                        END_STATEMENT           
}                        BRACE_END               
public                   KEYWORD                 
override                 KEYWORD                 
void                     KEYWORD                 
Remove                   IDENTIFIER              
(                        PARENTHESIS_START       
float                    KEYWORD                 
value                    IDENTIFIER              
)                        PARENTHESIS_END         
{                        BRACE_START             
base                     KEYWORD                 
.                        DOT                     
Remove                   IDENTIFIER              
(                        PARENTHESIS_START       
value                    IDENTIFIER              
)                        PARENTHESIS_END         
;                        END_STATEMENT           
CheckUnderflow           IDENTIFIER              
(                        PARENTHESIS_START       
)                        PARENTHESIS_END         
;                        END_STATEMENT           
}                        BRACE_END               
protected                KEYWORD                 
float                    KEYWORD                 
CheckOverflow            IDENTIFIER              
(                        PARENTHESIS_START       
)                        PARENTHESIS_END         
{                        BRACE_START             
if                       KEYWORD                 
(                        PARENTHESIS_START       
!                        LOGICAL_NOT             
_limitOverflow           IDENTIFIER              
)                        PARENTHESIS_END         
return                   KEYWORD                 
0                        NUM_LITERAL             
f                        NUM_SUFFIX              
;                        END_STATEMENT           
float                    KEYWORD                 
overflow                 IDENTIFIER              
=                        EQUALITY_OP             
0                        NUM_LITERAL             
f                        NUM_SUFFIX              
;                        END_STATEMENT           
if                       KEYWORD                 
(                        PARENTHESIS_START       
_value                   IDENTIFIER              
>                        RIGHT_ANGLE_BRACKET     
_currentMaximum          IDENTIFIER              
)                        PARENTHESIS_END         
{                        BRACE_START             
overflow                 IDENTIFIER              
=                        EQUALITY_OP             
_value                   IDENTIFIER              
-                        MINUS_OP                
_currentMaximum          IDENTIFIER              
;                        END_STATEMENT           
_value                   IDENTIFIER              
-=                       MINUS_ASSIGN            
overflow                 IDENTIFIER              
;                        END_STATEMENT           
}                        BRACE_END               
return                   KEYWORD                 
overflow                 IDENTIFIER              
;                        END_STATEMENT           
}                        BRACE_END               
protected                KEYWORD                 
float                    KEYWORD                 
CheckUnderflow           IDENTIFIER              
(                        PARENTHESIS_START       
)                        PARENTHESIS_END         
{                        BRACE_START             
if                       KEYWORD                 
(                        PARENTHESIS_START       
!                        LOGICAL_NOT             
_limitUnderflow          IDENTIFIER              
)                        PARENTHESIS_END         
return                   KEYWORD                 
0                        NUM_LITERAL             
f                        NUM_SUFFIX              
;                        END_STATEMENT           
float                    KEYWORD                 
underflow                IDENTIFIER              
=                        EQUALITY_OP             
0                        NUM_LITERAL             
f                        NUM_SUFFIX              
;                        END_STATEMENT           
if                       KEYWORD                 
(                        PARENTHESIS_START       
_value                   IDENTIFIER              
<                        LEFT_ANGLE_BRACKET      
_minimum                 IDENTIFIER              
)                        PARENTHESIS_END         
{                        BRACE_START             
underflow                IDENTIFIER              
=                        EQUALITY_OP             
_value                   IDENTIFIER              
;                        END_STATEMENT           
_value                   IDENTIFIER              
+=                       ADD_ASSIGN              
Mathf                    IDENTIFIER              
.                        DOT                     
Abs                      IDENTIFIER              
(                        PARENTHESIS_START       
underflow                IDENTIFIER              
)                        PARENTHESIS_END         
;                        END_STATEMENT           
}                        BRACE_END               
return                   KEYWORD                 
underflow                IDENTIFIER              
;                        END_STATEMENT           
}                        BRACE_END               
//                       COMMENT_DELIM           
//                       COMMENT_DELIM           
//                       COMMENT_DELIM           
protected                KEYWORD                 
void                     KEYWORD                 
SetRegen                 IDENTIFIER              
(                        PARENTHESIS_START       
float                    KEYWORD                 
value                    IDENTIFIER              
)                        PARENTHESIS_END         
{                        BRACE_START             
_currentRegen            IDENTIFIER              
=                        EQUALITY_OP             
value                    IDENTIFIER              
;                        END_STATEMENT           
}                        BRACE_END               
//                       COMMENT_DELIM           
//                       COMMENT_DELIM           
//                       COMMENT_DELIM           
protected                KEYWORD                 
void                     KEYWORD                 
SetMax                   IDENTIFIER              
(                        PARENTHESIS_START       
float                    KEYWORD                 
value                    IDENTIFIER              
)                        PARENTHESIS_END         
{                        BRACE_START             
_currentMaximum          IDENTIFIER              
=                        EQUALITY_OP             
value                    IDENTIFIER              
;                        END_STATEMENT           
}                        BRACE_END               
//                       COMMENT_DELIM           
//                       COMMENT_DELIM           
//                       COMMENT_DELIM           
//                       COMMENT_DELIM           
public                   KEYWORD                 
void                     KEYWORD                 
StartCycle               IDENTIFIER              
(                        PARENTHESIS_START       
Cycle                    IDENTIFIER              
cycle                    IDENTIFIER              
)                        PARENTHESIS_END         
{                        BRACE_START             
if                       KEYWORD                 
(                        PARENTHESIS_START       
!                        LOGICAL_NOT             
_allowChange             IDENTIFIER              
)                        PARENTHESIS_END         
return                   KEYWORD                 
;                        END_STATEMENT           
if                       KEYWORD                 
(                        PARENTHESIS_START       
cycle                    IDENTIFIER              
==                       LOGICAL_EQUALS          
Cycle                    IDENTIFIER              
.                        DOT                     
Regen                    IDENTIFIER              
)                        PARENTHESIS_END         
{                        BRACE_START             
Regen                    IDENTIFIER              
(                        PARENTHESIS_START       
)                        PARENTHESIS_END         
;                        END_STATEMENT           
}                        BRACE_END               
else                     KEYWORD                 
if                       KEYWORD                 
(                        PARENTHESIS_START       
cycle                    IDENTIFIER              
==                       LOGICAL_EQUALS          
Cycle                    IDENTIFIER              
.                        DOT                     
Degen                    IDENTIFIER              
)                        PARENTHESIS_END         
{                        BRACE_START             
Degen                    IDENTIFIER              
(                        PARENTHESIS_START       
)                        PARENTHESIS_END         
;                        END_STATEMENT           
}                        BRACE_END               
}                        BRACE_END               
public                   KEYWORD                 
void                     KEYWORD                 
AllowRegen               IDENTIFIER              
(                        PARENTHESIS_START       
bool                     KEYWORD                 
value                    IDENTIFIER              
)                        PARENTHESIS_END         
{                        BRACE_START             
_allowRegen              IDENTIFIER              
=                        EQUALITY_OP             
value                    IDENTIFIER              
;                        END_STATEMENT           
}                        BRACE_END               
public                   KEYWORD                 
void                     KEYWORD                 
AddRegenMultiplier       IDENTIFIER              
(                        PARENTHESIS_START       
float                    KEYWORD                 
value                    IDENTIFIER              
)                        PARENTHESIS_END         
{                        BRACE_START             
_regenMultiplier         IDENTIFIER              
+=                       ADD_ASSIGN              
value                    IDENTIFIER              
;                        END_STATEMENT           
SetRegen                 IDENTIFIER              
(                        PARENTHESIS_START       
_baseRegen               IDENTIFIER              
*                        MULT_OP                 
_regenMultiplier         IDENTIFIER              
)                        PARENTHESIS_END         
;                        END_STATEMENT           
}                        BRACE_END               
public                   KEYWORD                 
void                     KEYWORD                 
SetRegenMultiplier       IDENTIFIER              
(                        PARENTHESIS_START       
float                    KEYWORD                 
value                    IDENTIFIER              
)                        PARENTHESIS_END         
{                        BRACE_START             
_regenMultiplier         IDENTIFIER              
=                        EQUALITY_OP             
value                    IDENTIFIER              
;                        END_STATEMENT           
SetRegen                 IDENTIFIER              
(                        PARENTHESIS_START       
_baseRegen               IDENTIFIER              
*                        MULT_OP                 
_regenMultiplier         IDENTIFIER              
)                        PARENTHESIS_END         
;                        END_STATEMENT           
}                        BRACE_END               
public                   KEYWORD                 
virtual                  KEYWORD                 
float                    KEYWORD                 
ToMax                    IDENTIFIER              
(                        PARENTHESIS_START       
)                        PARENTHESIS_END         
{                        BRACE_START             
_value                   IDENTIFIER              
=                        EQUALITY_OP             
_currentMaximum          IDENTIFIER              
;                        END_STATEMENT           
OnValueChange            IDENTIFIER              
(                        PARENTHESIS_START       
)                        PARENTHESIS_END         
;                        END_STATEMENT           
return                   KEYWORD                 
_value                   IDENTIFIER              
;                        END_STATEMENT           
}                        BRACE_END               
public                   KEYWORD                 
void                     KEYWORD                 
AddMultiplier            IDENTIFIER              
(                        PARENTHESIS_START       
float                    KEYWORD                 
value                    IDENTIFIER              
)                        PARENTHESIS_END         
{                        BRACE_START             
_multiplier              IDENTIFIER              
+=                       ADD_ASSIGN              
value                    IDENTIFIER              
;                        END_STATEMENT           
SetMax                   IDENTIFIER              
(                        PARENTHESIS_START       
_baseMaximum             IDENTIFIER              
*                        MULT_OP                 
_multiplier              IDENTIFIER              
)                        PARENTHESIS_END         
;                        END_STATEMENT           
}                        BRACE_END               
public                   KEYWORD                 
void                     KEYWORD                 
SetMultiplier            IDENTIFIER              
(                        PARENTHESIS_START       
float                    KEYWORD                 
value                    IDENTIFIER              
)                        PARENTHESIS_END         
{                        BRACE_START             
_multiplier              IDENTIFIER              
=                        EQUALITY_OP             
value                    IDENTIFIER              
;                        END_STATEMENT           
SetMax                   IDENTIFIER              
(                        PARENTHESIS_START       
_baseMaximum             IDENTIFIER              
*                        MULT_OP                 
_multiplier              IDENTIFIER              
)                        PARENTHESIS_END         
;                        END_STATEMENT           
}                        BRACE_END               
}                        BRACE_END               
}                        BRACE_END               
